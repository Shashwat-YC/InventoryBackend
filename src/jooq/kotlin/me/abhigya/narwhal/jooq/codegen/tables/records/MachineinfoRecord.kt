/*
 * This file is generated by jOOQ.
 */
package me.ave.inventory.jooq.codegen.tables.records


import javax.annotation.processing.Generated

import me.ave.inventory.jooq.codegen.tables.Machineinfo

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.7",
        "schema version:public_2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class MachineinfoRecord() : UpdatableRecordImpl<MachineinfoRecord>(Machineinfo.MACHINEINFO) {

    open var model: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var maker: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    /**
     * Create a detached, initialised MachineinfoRecord
     */
    constructor(model: String? = null, name: String? = null, maker: String? = null): this() {
        this.model = model
        this.name = name
        this.maker = maker
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised MachineinfoRecord
     */
    constructor(value: me.ave.inventory.jooq.codegen.tables.pojos.Machineinfo?): this() {
        if (value != null) {
            this.model = value.model
            this.name = value.name
            this.maker = value.maker
            resetChangedOnNotNull()
        }
    }
}
