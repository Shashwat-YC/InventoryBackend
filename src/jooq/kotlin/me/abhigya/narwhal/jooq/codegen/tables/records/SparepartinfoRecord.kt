/*
 * This file is generated by jOOQ.
 */
package me.ave.inventory.jooq.codegen.tables.records


import javax.annotation.processing.Generated

import me.ave.inventory.jooq.codegen.tables.Sparepartinfo

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.7",
        "schema version:public_2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class SparepartinfoRecord() : UpdatableRecordImpl<SparepartinfoRecord>(Sparepartinfo.SPAREPARTINFO) {

    open var code: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var partNo: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var machineModel: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var rob: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    /**
     * Create a detached, initialised SparepartinfoRecord
     */
    constructor(code: String? = null, name: String? = null, partNo: String? = null, machineModel: String? = null, rob: Int? = null): this() {
        this.code = code
        this.name = name
        this.partNo = partNo
        this.machineModel = machineModel
        this.rob = rob
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised SparepartinfoRecord
     */
    constructor(value: me.ave.inventory.jooq.codegen.tables.pojos.Sparepartinfo?): this() {
        if (value != null) {
            this.code = value.code
            this.name = value.name
            this.partNo = value.partNo
            this.machineModel = value.machineModel
            this.rob = value.rob
            resetChangedOnNotNull()
        }
    }
}
