/*
 * This file is generated by jOOQ.
 */
package me.ave.inventory.jooq.codegen.tables.records


import javax.annotation.processing.Generated

import me.ave.inventory.jooq.codegen.enums.ScheduleType
import me.ave.inventory.jooq.codegen.tables.Scheduleinfo

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.7",
        "schema version:public_2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class ScheduleinfoRecord() : UpdatableRecordImpl<ScheduleinfoRecord>(Scheduleinfo.SCHEDULEINFO) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var type: ScheduleType?
        set(value): Unit = set(1, value)
        get(): ScheduleType? = get(1) as ScheduleType?

    open var delay: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised ScheduleinfoRecord
     */
    constructor(id: Int? = null, type: ScheduleType? = null, delay: Int? = null): this() {
        this.id = id
        this.type = type
        this.delay = delay
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised ScheduleinfoRecord
     */
    constructor(value: me.ave.inventory.jooq.codegen.tables.pojos.Scheduleinfo?): this() {
        if (value != null) {
            this.id = value.id
            this.type = value.type
            this.delay = value.delay
            resetChangedOnNotNull()
        }
    }
}
