/*
 * This file is generated by jOOQ.
 */
package me.ave.inventory.jooq.codegen.tables.daos


import javax.annotation.processing.Generated

import kotlin.collections.List

import me.ave.inventory.jooq.codegen.tables.Machineinfo
import me.ave.inventory.jooq.codegen.tables.records.MachineinfoRecord

import org.jooq.Configuration
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.7",
        "schema version:public_2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class MachineinfoDao(configuration: Configuration?) : DAOImpl<MachineinfoRecord, me.ave.inventory.jooq.codegen.tables.pojos.Machineinfo, String>(Machineinfo.MACHINEINFO, me.ave.inventory.jooq.codegen.tables.pojos.Machineinfo::class.java, configuration) {

    /**
     * Create a new MachineinfoDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: me.ave.inventory.jooq.codegen.tables.pojos.Machineinfo): String? = o.model

    /**
     * Fetch records that have <code>model BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfModel(lowerInclusive: String?, upperInclusive: String?): List<me.ave.inventory.jooq.codegen.tables.pojos.Machineinfo> = fetchRange(Machineinfo.MACHINEINFO.MODEL, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>model IN (values)</code>
     */
    fun fetchByModel(vararg values: String): List<me.ave.inventory.jooq.codegen.tables.pojos.Machineinfo> = fetch(Machineinfo.MACHINEINFO.MODEL, *values)

    /**
     * Fetch a unique record that has <code>model = value</code>
     */
    fun fetchOneByModel(value: String): me.ave.inventory.jooq.codegen.tables.pojos.Machineinfo? = fetchOne(Machineinfo.MACHINEINFO.MODEL, value)

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfName(lowerInclusive: String?, upperInclusive: String?): List<me.ave.inventory.jooq.codegen.tables.pojos.Machineinfo> = fetchRange(Machineinfo.MACHINEINFO.NAME, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    fun fetchByName(vararg values: String): List<me.ave.inventory.jooq.codegen.tables.pojos.Machineinfo> = fetch(Machineinfo.MACHINEINFO.NAME, *values)

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    fun fetchOneByName(value: String): me.ave.inventory.jooq.codegen.tables.pojos.Machineinfo? = fetchOne(Machineinfo.MACHINEINFO.NAME, value)

    /**
     * Fetch records that have <code>maker BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfMaker(lowerInclusive: String?, upperInclusive: String?): List<me.ave.inventory.jooq.codegen.tables.pojos.Machineinfo> = fetchRange(Machineinfo.MACHINEINFO.MAKER, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>maker IN (values)</code>
     */
    fun fetchByMaker(vararg values: String): List<me.ave.inventory.jooq.codegen.tables.pojos.Machineinfo> = fetch(Machineinfo.MACHINEINFO.MAKER, *values)
}
