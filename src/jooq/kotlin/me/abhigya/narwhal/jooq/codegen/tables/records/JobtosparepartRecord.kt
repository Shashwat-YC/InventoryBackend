/*
 * This file is generated by jOOQ.
 */
package me.ave.inventory.jooq.codegen.tables.records


import javax.annotation.processing.Generated

import me.ave.inventory.jooq.codegen.tables.Jobtosparepart

import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.7",
        "schema version:public_2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class JobtosparepartRecord() : TableRecordImpl<JobtosparepartRecord>(Jobtosparepart.JOBTOSPAREPART) {

    open var pmsCode: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var sparePart: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var quantity: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    /**
     * Create a detached, initialised JobtosparepartRecord
     */
    constructor(pmsCode: String? = null, sparePart: String? = null, quantity: Int? = null): this() {
        this.pmsCode = pmsCode
        this.sparePart = sparePart
        this.quantity = quantity
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised JobtosparepartRecord
     */
    constructor(value: me.ave.inventory.jooq.codegen.tables.pojos.Jobtosparepart?): this() {
        if (value != null) {
            this.pmsCode = value.pmsCode
            this.sparePart = value.sparePart
            this.quantity = value.quantity
            resetChangedOnNotNull()
        }
    }
}
