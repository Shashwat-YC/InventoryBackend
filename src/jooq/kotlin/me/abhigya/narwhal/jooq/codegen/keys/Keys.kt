/*
 * This file is generated by jOOQ.
 */
package me.ave.inventory.jooq.codegen.keys


import me.ave.inventory.jooq.codegen.tables.Databasechangeloglock
import me.ave.inventory.jooq.codegen.tables.Floor
import me.ave.inventory.jooq.codegen.tables.Job
import me.ave.inventory.jooq.codegen.tables.Jobtosparepart
import me.ave.inventory.jooq.codegen.tables.Location
import me.ave.inventory.jooq.codegen.tables.Machine
import me.ave.inventory.jooq.codegen.tables.Machineinfo
import me.ave.inventory.jooq.codegen.tables.Machinetolocation
import me.ave.inventory.jooq.codegen.tables.Maintenancerecord
import me.ave.inventory.jooq.codegen.tables.Maintenanceupdatedpacket
import me.ave.inventory.jooq.codegen.tables.Packetrecord
import me.ave.inventory.jooq.codegen.tables.Room
import me.ave.inventory.jooq.codegen.tables.Scheduleinfo
import me.ave.inventory.jooq.codegen.tables.Sparepartinfo
import me.ave.inventory.jooq.codegen.tables.Unassignedpackets
import me.ave.inventory.jooq.codegen.tables.Usedpacketrecord
import me.ave.inventory.jooq.codegen.tables.records.DatabasechangeloglockRecord
import me.ave.inventory.jooq.codegen.tables.records.FloorRecord
import me.ave.inventory.jooq.codegen.tables.records.JobRecord
import me.ave.inventory.jooq.codegen.tables.records.JobtosparepartRecord
import me.ave.inventory.jooq.codegen.tables.records.LocationRecord
import me.ave.inventory.jooq.codegen.tables.records.MachineRecord
import me.ave.inventory.jooq.codegen.tables.records.MachineinfoRecord
import me.ave.inventory.jooq.codegen.tables.records.MachinetolocationRecord
import me.ave.inventory.jooq.codegen.tables.records.MaintenancerecordRecord
import me.ave.inventory.jooq.codegen.tables.records.MaintenanceupdatedpacketRecord
import me.ave.inventory.jooq.codegen.tables.records.PacketrecordRecord
import me.ave.inventory.jooq.codegen.tables.records.RoomRecord
import me.ave.inventory.jooq.codegen.tables.records.ScheduleinfoRecord
import me.ave.inventory.jooq.codegen.tables.records.SparepartinfoRecord
import me.ave.inventory.jooq.codegen.tables.records.UnassignedpacketsRecord
import me.ave.inventory.jooq.codegen.tables.records.UsedpacketrecordRecord

import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val DATABASECHANGELOGLOCK_PKEY: UniqueKey<DatabasechangeloglockRecord> = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, DSL.name("databasechangeloglock_pkey"), arrayOf(Databasechangeloglock.DATABASECHANGELOGLOCK.ID), true)
val FLOOR_PKEY: UniqueKey<FloorRecord> = Internal.createUniqueKey(Floor.FLOOR, DSL.name("floor_pkey"), arrayOf(Floor.FLOOR.ID), true)
val JOB_PKEY: UniqueKey<JobRecord> = Internal.createUniqueKey(Job.JOB, DSL.name("job_pkey"), arrayOf(Job.JOB.PMS_CODE), true)
val UQ_PMSSPAREPART: UniqueKey<JobtosparepartRecord> = Internal.createUniqueKey(Jobtosparepart.JOBTOSPAREPART, DSL.name("uq_pmssparepart"), arrayOf(Jobtosparepart.JOBTOSPAREPART.PMS_CODE, Jobtosparepart.JOBTOSPAREPART.SPARE_PART), true)
val LOCATION_PKEY: UniqueKey<LocationRecord> = Internal.createUniqueKey(Location.LOCATION, DSL.name("location_pkey"), arrayOf(Location.LOCATION.ID), true)
val UQ_LOCATION: UniqueKey<LocationRecord> = Internal.createUniqueKey(Location.LOCATION, DSL.name("uq_location"), arrayOf(Location.LOCATION.ROOM_ID, Location.LOCATION.RACK, Location.LOCATION.SHELF), true)
val MACHINE_PKEY: UniqueKey<MachineRecord> = Internal.createUniqueKey(Machine.MACHINE, DSL.name("machine_pkey"), arrayOf(Machine.MACHINE.MODEL, Machine.MACHINE.MACHINE_NO), true)
val MACHINEINFO_PKEY: UniqueKey<MachineinfoRecord> = Internal.createUniqueKey(Machineinfo.MACHINEINFO, DSL.name("machineinfo_pkey"), arrayOf(Machineinfo.MACHINEINFO.MODEL), true)
val UQ_MACHINENAME: UniqueKey<MachineinfoRecord> = Internal.createUniqueKey(Machineinfo.MACHINEINFO, DSL.name("uq_machinename"), arrayOf(Machineinfo.MACHINEINFO.NAME), true)
val UQ_MACHINELOCATION: UniqueKey<MachinetolocationRecord> = Internal.createUniqueKey(Machinetolocation.MACHINETOLOCATION, DSL.name("uq_machinelocation"), arrayOf(Machinetolocation.MACHINETOLOCATION.MODEL, Machinetolocation.MACHINETOLOCATION.LOCATION_ID), true)
val MAINTENANCERECORD_PKEY: UniqueKey<MaintenancerecordRecord> = Internal.createUniqueKey(Maintenancerecord.MAINTENANCERECORD, DSL.name("maintenancerecord_pkey"), arrayOf(Maintenancerecord.MAINTENANCERECORD.ID), true)
val UQ_MAINTENANCEUPDATEDPACKET: UniqueKey<MaintenanceupdatedpacketRecord> = Internal.createUniqueKey(Maintenanceupdatedpacket.MAINTENANCEUPDATEDPACKET, DSL.name("uq_maintenanceupdatedpacket"), arrayOf(Maintenanceupdatedpacket.MAINTENANCEUPDATEDPACKET.MAINTENANCE_ID, Maintenanceupdatedpacket.MAINTENANCEUPDATEDPACKET.SPARE_PART_CODE), true)
val PACKETRECORD_PKEY: UniqueKey<PacketrecordRecord> = Internal.createUniqueKey(Packetrecord.PACKETRECORD, DSL.name("packetrecord_pkey"), arrayOf(Packetrecord.PACKETRECORD.ID), true)
val ROOM_PKEY: UniqueKey<RoomRecord> = Internal.createUniqueKey(Room.ROOM, DSL.name("room_pkey"), arrayOf(Room.ROOM.ID), true)
val SCHEDULEINFO_PKEY: UniqueKey<ScheduleinfoRecord> = Internal.createUniqueKey(Scheduleinfo.SCHEDULEINFO, DSL.name("scheduleinfo_pkey"), arrayOf(Scheduleinfo.SCHEDULEINFO.ID), true)
val UQ_SCHEDULETYPE: UniqueKey<ScheduleinfoRecord> = Internal.createUniqueKey(Scheduleinfo.SCHEDULEINFO, DSL.name("uq_scheduletype"), arrayOf(Scheduleinfo.SCHEDULEINFO.TYPE, Scheduleinfo.SCHEDULEINFO.DELAY), true)
val SPAREPARTINFO_PKEY: UniqueKey<SparepartinfoRecord> = Internal.createUniqueKey(Sparepartinfo.SPAREPARTINFO, DSL.name("sparepartinfo_pkey"), arrayOf(Sparepartinfo.SPAREPARTINFO.CODE), true)
val UNASSIGNEDPACKETS_PKEY: UniqueKey<UnassignedpacketsRecord> = Internal.createUniqueKey(Unassignedpackets.UNASSIGNEDPACKETS, DSL.name("unassignedpackets_pkey"), arrayOf(Unassignedpackets.UNASSIGNEDPACKETS.ID), true)
val USEDPACKETRECORD_PKEY: UniqueKey<UsedpacketrecordRecord> = Internal.createUniqueKey(Usedpacketrecord.USEDPACKETRECORD, DSL.name("usedpacketrecord_pkey"), arrayOf(Usedpacketrecord.USEDPACKETRECORD.ID), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val JOB__FK_JOBSCHEDULE: ForeignKey<JobRecord, ScheduleinfoRecord> = Internal.createForeignKey(Job.JOB, DSL.name("fk_jobschedule"), arrayOf(Job.JOB.SCHEDULE_KEY), me.ave.inventory.jooq.codegen.keys.SCHEDULEINFO_PKEY, arrayOf(Scheduleinfo.SCHEDULEINFO.ID), true)
val JOBTOSPAREPART__FK_JOBSPAREPART: ForeignKey<JobtosparepartRecord, JobRecord> = Internal.createForeignKey(Jobtosparepart.JOBTOSPAREPART, DSL.name("fk_jobsparepart"), arrayOf(Jobtosparepart.JOBTOSPAREPART.PMS_CODE), me.ave.inventory.jooq.codegen.keys.JOB_PKEY, arrayOf(Job.JOB.PMS_CODE), true)
val JOBTOSPAREPART__FK_SPAREPARTJOB: ForeignKey<JobtosparepartRecord, SparepartinfoRecord> = Internal.createForeignKey(Jobtosparepart.JOBTOSPAREPART, DSL.name("fk_sparepartjob"), arrayOf(Jobtosparepart.JOBTOSPAREPART.SPARE_PART), me.ave.inventory.jooq.codegen.keys.SPAREPARTINFO_PKEY, arrayOf(Sparepartinfo.SPAREPARTINFO.CODE), true)
val LOCATION__FK_ROOMLOCATION: ForeignKey<LocationRecord, RoomRecord> = Internal.createForeignKey(Location.LOCATION, DSL.name("fk_roomlocation"), arrayOf(Location.LOCATION.ROOM_ID), me.ave.inventory.jooq.codegen.keys.ROOM_PKEY, arrayOf(Room.ROOM.ID), true)
val MACHINE__FK_MACHINEINFO: ForeignKey<MachineRecord, MachineinfoRecord> = Internal.createForeignKey(Machine.MACHINE, DSL.name("fk_machineinfo"), arrayOf(Machine.MACHINE.MODEL), me.ave.inventory.jooq.codegen.keys.MACHINEINFO_PKEY, arrayOf(Machineinfo.MACHINEINFO.MODEL), true)
val MACHINETOLOCATION__FK_LOCATION: ForeignKey<MachinetolocationRecord, LocationRecord> = Internal.createForeignKey(Machinetolocation.MACHINETOLOCATION, DSL.name("fk_location"), arrayOf(Machinetolocation.MACHINETOLOCATION.LOCATION_ID), me.ave.inventory.jooq.codegen.keys.LOCATION_PKEY, arrayOf(Location.LOCATION.ID), true)
val MACHINETOLOCATION__FK_MACHINEMODEL: ForeignKey<MachinetolocationRecord, MachineinfoRecord> = Internal.createForeignKey(Machinetolocation.MACHINETOLOCATION, DSL.name("fk_machinemodel"), arrayOf(Machinetolocation.MACHINETOLOCATION.MODEL), me.ave.inventory.jooq.codegen.keys.MACHINEINFO_PKEY, arrayOf(Machineinfo.MACHINEINFO.MODEL), true)
val MAINTENANCERECORD__FK_MAINTAININFO: ForeignKey<MaintenancerecordRecord, MachineinfoRecord> = Internal.createForeignKey(Maintenancerecord.MAINTENANCERECORD, DSL.name("fk_maintaininfo"), arrayOf(Maintenancerecord.MAINTENANCERECORD.MODEL), me.ave.inventory.jooq.codegen.keys.MACHINEINFO_PKEY, arrayOf(Machineinfo.MACHINEINFO.MODEL), true)
val MAINTENANCERECORD__FK_MAINTAINJOB: ForeignKey<MaintenancerecordRecord, JobRecord> = Internal.createForeignKey(Maintenancerecord.MAINTENANCERECORD, DSL.name("fk_maintainjob"), arrayOf(Maintenancerecord.MAINTENANCERECORD.PMS_CODE), me.ave.inventory.jooq.codegen.keys.JOB_PKEY, arrayOf(Job.JOB.PMS_CODE), true)
val MAINTENANCERECORD__FK_MAINTAINMACHINE: ForeignKey<MaintenancerecordRecord, MachineRecord> = Internal.createForeignKey(Maintenancerecord.MAINTENANCERECORD, DSL.name("fk_maintainmachine"), arrayOf(Maintenancerecord.MAINTENANCERECORD.MODEL, Maintenancerecord.MAINTENANCERECORD.MACHINE_NO), me.ave.inventory.jooq.codegen.keys.MACHINE_PKEY, arrayOf(Machine.MACHINE.MODEL, Machine.MACHINE.MACHINE_NO), true)
val MAINTENANCEUPDATEDPACKET__FK_MAINTENANCEUPDATEDPACKET: ForeignKey<MaintenanceupdatedpacketRecord, MaintenancerecordRecord> = Internal.createForeignKey(Maintenanceupdatedpacket.MAINTENANCEUPDATEDPACKET, DSL.name("fk_maintenanceupdatedpacket"), arrayOf(Maintenanceupdatedpacket.MAINTENANCEUPDATEDPACKET.MAINTENANCE_ID), me.ave.inventory.jooq.codegen.keys.MAINTENANCERECORD_PKEY, arrayOf(Maintenancerecord.MAINTENANCERECORD.ID), true)
val MAINTENANCEUPDATEDPACKET__FK_UPDATEDPACKETSPAREPART: ForeignKey<MaintenanceupdatedpacketRecord, SparepartinfoRecord> = Internal.createForeignKey(Maintenanceupdatedpacket.MAINTENANCEUPDATEDPACKET, DSL.name("fk_updatedpacketsparepart"), arrayOf(Maintenanceupdatedpacket.MAINTENANCEUPDATEDPACKET.SPARE_PART_CODE), me.ave.inventory.jooq.codegen.keys.SPAREPARTINFO_PKEY, arrayOf(Sparepartinfo.SPAREPARTINFO.CODE), true)
val PACKETRECORD__FK_LOCATION: ForeignKey<PacketrecordRecord, LocationRecord> = Internal.createForeignKey(Packetrecord.PACKETRECORD, DSL.name("fk_location"), arrayOf(Packetrecord.PACKETRECORD.LOCATION_ID), me.ave.inventory.jooq.codegen.keys.LOCATION_PKEY, arrayOf(Location.LOCATION.ID), true)
val PACKETRECORD__FK_PACKETCODE: ForeignKey<PacketrecordRecord, SparepartinfoRecord> = Internal.createForeignKey(Packetrecord.PACKETRECORD, DSL.name("fk_packetcode"), arrayOf(Packetrecord.PACKETRECORD.CODE), me.ave.inventory.jooq.codegen.keys.SPAREPARTINFO_PKEY, arrayOf(Sparepartinfo.SPAREPARTINFO.CODE), true)
val ROOM__FK_ROOMFLOOR: ForeignKey<RoomRecord, FloorRecord> = Internal.createForeignKey(Room.ROOM, DSL.name("fk_roomfloor"), arrayOf(Room.ROOM.FLOOR), me.ave.inventory.jooq.codegen.keys.FLOOR_PKEY, arrayOf(Floor.FLOOR.ID), true)
val SPAREPARTINFO__FK_CODEINFO: ForeignKey<SparepartinfoRecord, MachineinfoRecord> = Internal.createForeignKey(Sparepartinfo.SPAREPARTINFO, DSL.name("fk_codeinfo"), arrayOf(Sparepartinfo.SPAREPARTINFO.MACHINE_MODEL), me.ave.inventory.jooq.codegen.keys.MACHINEINFO_PKEY, arrayOf(Machineinfo.MACHINEINFO.MODEL), true)
val USEDPACKETRECORD__FK_PACKETRECORD: ForeignKey<UsedpacketrecordRecord, PacketrecordRecord> = Internal.createForeignKey(Usedpacketrecord.USEDPACKETRECORD, DSL.name("fk_packetrecord"), arrayOf(Usedpacketrecord.USEDPACKETRECORD.PACKET_ID), me.ave.inventory.jooq.codegen.keys.PACKETRECORD_PKEY, arrayOf(Packetrecord.PACKETRECORD.ID), true)
