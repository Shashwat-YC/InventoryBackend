/*
 * This file is generated by jOOQ.
 */
package me.ave.inventory.jooq.codegen.tables.daos


import javax.annotation.processing.Generated

import kotlin.collections.List

import kotlinx.datetime.Instant

import me.ave.inventory.jooq.codegen.tables.Maintenancerecord
import me.ave.inventory.jooq.codegen.tables.records.MaintenancerecordRecord

import org.jooq.Configuration
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.7",
        "schema version:public_2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class MaintenancerecordDao(configuration: Configuration?) : DAOImpl<MaintenancerecordRecord, me.ave.inventory.jooq.codegen.tables.pojos.Maintenancerecord, Int>(Maintenancerecord.MAINTENANCERECORD, me.ave.inventory.jooq.codegen.tables.pojos.Maintenancerecord::class.java, configuration) {

    /**
     * Create a new MaintenancerecordDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: me.ave.inventory.jooq.codegen.tables.pojos.Maintenancerecord): Int? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: Int?, upperInclusive: Int?): List<me.ave.inventory.jooq.codegen.tables.pojos.Maintenancerecord> = fetchRange(Maintenancerecord.MAINTENANCERECORD.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: Int): List<me.ave.inventory.jooq.codegen.tables.pojos.Maintenancerecord> = fetch(Maintenancerecord.MAINTENANCERECORD.ID, *values.toTypedArray())

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: Int): me.ave.inventory.jooq.codegen.tables.pojos.Maintenancerecord? = fetchOne(Maintenancerecord.MAINTENANCERECORD.ID, value)

    /**
     * Fetch records that have <code>model BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfModel(lowerInclusive: String?, upperInclusive: String?): List<me.ave.inventory.jooq.codegen.tables.pojos.Maintenancerecord> = fetchRange(Maintenancerecord.MAINTENANCERECORD.MODEL, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>model IN (values)</code>
     */
    fun fetchByModel(vararg values: String): List<me.ave.inventory.jooq.codegen.tables.pojos.Maintenancerecord> = fetch(Maintenancerecord.MAINTENANCERECORD.MODEL, *values)

    /**
     * Fetch records that have <code>machine_no BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfMachineNo(lowerInclusive: Int?, upperInclusive: Int?): List<me.ave.inventory.jooq.codegen.tables.pojos.Maintenancerecord> = fetchRange(Maintenancerecord.MAINTENANCERECORD.MACHINE_NO, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>machine_no IN (values)</code>
     */
    fun fetchByMachineNo(vararg values: Int): List<me.ave.inventory.jooq.codegen.tables.pojos.Maintenancerecord> = fetch(Maintenancerecord.MAINTENANCERECORD.MACHINE_NO, *values.toTypedArray())

    /**
     * Fetch records that have <code>pms_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfPmsCode(lowerInclusive: String?, upperInclusive: String?): List<me.ave.inventory.jooq.codegen.tables.pojos.Maintenancerecord> = fetchRange(Maintenancerecord.MAINTENANCERECORD.PMS_CODE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>pms_code IN (values)</code>
     */
    fun fetchByPmsCode(vararg values: String): List<me.ave.inventory.jooq.codegen.tables.pojos.Maintenancerecord> = fetch(Maintenancerecord.MAINTENANCERECORD.PMS_CODE, *values)

    /**
     * Fetch records that have <code>time_started BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfTimeStarted(lowerInclusive: Instant?, upperInclusive: Instant?): List<me.ave.inventory.jooq.codegen.tables.pojos.Maintenancerecord> = fetchRange(Maintenancerecord.MAINTENANCERECORD.TIME_STARTED, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>time_started IN (values)</code>
     */
    fun fetchByTimeStarted(vararg values: Instant): List<me.ave.inventory.jooq.codegen.tables.pojos.Maintenancerecord> = fetch(Maintenancerecord.MAINTENANCERECORD.TIME_STARTED, *values)

    /**
     * Fetch records that have <code>time_completed BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfTimeCompleted(lowerInclusive: Instant?, upperInclusive: Instant?): List<me.ave.inventory.jooq.codegen.tables.pojos.Maintenancerecord> = fetchRange(Maintenancerecord.MAINTENANCERECORD.TIME_COMPLETED, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>time_completed IN (values)</code>
     */
    fun fetchByTimeCompleted(vararg values: Instant): List<me.ave.inventory.jooq.codegen.tables.pojos.Maintenancerecord> = fetch(Maintenancerecord.MAINTENANCERECORD.TIME_COMPLETED, *values)
}
