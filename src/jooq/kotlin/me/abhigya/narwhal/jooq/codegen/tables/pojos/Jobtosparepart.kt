/*
 * This file is generated by jOOQ.
 */
package me.ave.inventory.jooq.codegen.tables.pojos


import java.io.Serializable

import javax.annotation.processing.Generated


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.7",
        "schema version:public_2"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
data class Jobtosparepart(
    var pmsCode: String? = null,
    var sparePart: String? = null,
    var quantity: Int? = null
): Serializable {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Jobtosparepart = other as Jobtosparepart
        if (this.pmsCode == null) {
            if (o.pmsCode != null)
                return false
        }
        else if (this.pmsCode != o.pmsCode)
            return false
        if (this.sparePart == null) {
            if (o.sparePart != null)
                return false
        }
        else if (this.sparePart != o.sparePart)
            return false
        if (this.quantity == null) {
            if (o.quantity != null)
                return false
        }
        else if (this.quantity != o.quantity)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.pmsCode == null) 0 else this.pmsCode.hashCode())
        result = prime * result + (if (this.sparePart == null) 0 else this.sparePart.hashCode())
        result = prime * result + (if (this.quantity == null) 0 else this.quantity.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Jobtosparepart (")

        sb.append(pmsCode)
        sb.append(", ").append(sparePart)
        sb.append(", ").append(quantity)

        sb.append(")")
        return sb.toString()
    }
}
